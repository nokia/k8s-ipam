apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: logicalendpoints.inv.nephio.org
spec:
  group: inv.nephio.org
  names:
    categories:
    - nephio
    - inv
    kind: LogicalEndpoint
    listKind: LogicalEndpointList
    plural: logicalendpoints
    singular: logicalendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LogicalEndpoint is the Schema for the vlan API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LogicalEndpointSpec defines the desired state of LogicalEndpoint
            properties:
              endpoints:
                description: Endpoints define the endpoints that belong to the logical link
                items:
                  description: EndpointSpec defines the desired state of Endpoint
                  properties:
                    interfaceName:
                      description: topology defines the topology to which this endpoint belongs Topology string `json:"topology,omitempty" yaml:"topology,omitempty"` InterfaceName provide the name of the interface of the endpoint
                      maxLength: 64
                      type: string
                    lacpFallback:
                      description: LacpFallback defines if the link is part of a lag mutually exclusive with Lag parameter
                      type: boolean
                    nodeName:
                      description: NodeName provide the name of the node on which this endpoint belongs.
                      maxLength: 64
                      type: string
                  required:
                  - interfaceName
                  - nodeName
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              lacp:
                description: Lacp defines if the lag enabled LACP
                type: boolean
              name:
                description: MultiHoming defines if this logical endpoint is multi-homed MultiHoming *bool `json:"multiHoming,omitempty" yaml:"multiHoming,omitempty"` Name defines the logical endpoint name can be single-homed or multi-homed
                type: string
            required:
            - endpoints
            type: object
          status:
            description: LogicalEndpointStatus defines the observed state of LogicalEndpoint
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              esi:
                description: ESI defines the ethernet segment identifier of the logical link if set this is a multi-homed logical endpoint the ESI is a global unique identifier within the administrative domain/topology
                format: int32
                type: integer
              lagId:
                description: LagId defines the lag id for the logical single-homed or multi-homed endpoint
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
